                            Program CSV_BOM
                             2 March 2022


csv_bom <.csv file name>

This program is used as one step in producing a bill of materials (BOM)
from a circuit board design using Eagle version 5 or later.  This program
is intended to be run by the BOM Eagle ULP, but its interface is fully
documented here.

The command line argument is intended to be the name of the CSV file
produced by the BOM ULP.  This should be "<name>_parts.csv", where NAME is
the Eagle board name.

The first line of the input file contains the names of each field. These
are checked, and the program aborts with error if anything unexpected is
found.  This can be due to a version mismatch between the BOM ULP and this
program.

The output file will be written to the same directory as the input file,
and will be named "<name>_bom.tsv".  This is a tab-separated values file
intended for easy importing into spreadsheet programs.  Like a CSV file,
the first line contains the names of the colums, and the remaining lines
are data lines of the spreadsheet.

The additional output file "parts.csv" is also written.  This file
contains one line for each unique part used.  It is in the same format as
a parts reference file.  The purpose of the "parts.csv" file is to make it
easy to update a parts reference file with any new parts.

This program performs several tasks:

  1 - Derives the final description, value, and other fields from the raw
      information such as the library name, device name, and various
      attributes.  See the EAGLE_ATTR documentation file for a description
      of the special attributes used in this process.

  2 - Reads a parts reference file, if available, and fills in more
      information for each part from the reference file, as appropriate.

  3 - Identifies common parts and groups them on the same line of the BOM
      with the quantity field appropriately set.

  4 - Writes equations in some spreadsheet cells for automatic cost
      computation.

  5 - Formats this output for reliable importing into the spreadsheet
      program.  The output file was tested with Microsoft Excel, but will
      likely work with a variety of spreadsheet programs.

  6 - Writes the "parts.csv" file for easy updating of any parts reference
      file that might have been used.

The user steps in producing a BOM from an Eagle board or schematic are:

  1 - Run the BOM ULP in Eagle.  This produces a .CSV (comma separate
      values) file that provides information about each device used in the
      board.  The information includes such things as the part designator,
      library, package, and various attributes.  The detailed format of
      this file may change with different revisions of the BOM ULP and the
      CSV_BOM program.

      The BOM ULP then automatically runs CSV_BOM to produce a .TSV file
      with the BOM information.

  2 - Import the TSV file into a spread sheet program.  The fields in the
      TSV file are delimited with tab characters.  CSV_BOM copies a
      template XLS file into the same directory as the CSV file.  This
      template has the format for the columns already set appropriately
      for the data in the TSV file.  It is therefore best to open the
      template, then import the TSV file from there.

      In newer versions of Excel, this is done with the menu entry DATA >
      GET DATA > LEGACY WIZARDS > FROM TEXT (LEGACY).

  3 - Inspect the spreadsheet.  If the manufacturer name, part number, and
      other relevant information is not present for a part, go back to the
      schematic or the Eagle library the part came from and add this
      information.  If the information is not unique to this particular
      use of the part, add the information to the device in the library
      instead of the schematic.  Adding it to the library will save work
      in the long run because it will be the default for future designs.

      Repeat from step 1 until all possible information that can come from
      the schematic or the libraries has been added to them.  Various
      Eagle attributes in library devices are used by the BOM generation
      utilities.  See the EAGLE_ATTR documentation file for a description
      of the special attributes.

      Note that LIBRARY > UPDATE ALL will need to be run in the schematic
      or board editor before changes in a library become visible.

  4 - Add the remaining information to the BOM, such as current unit
      prices.

      The spreadsheet will automatically compute the parts cost for a
      board and a run of boards once the unit prices for each component
      are filled in.  The top left cell in the spreadsheet (A1) is the
      number of boards in a production run.  This effects the total
      quantity required for each part and the total cost of the run.

  5 - Labels for kitting can be produced from the spreadsheet.  See the
      BOM_LABELS program description for details.
