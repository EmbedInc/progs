//   DIRSIZE
//
//   Show sizes of files and directories as seen from the current directory.
//
var new size integer         //file or tree size, bytes
var new tsiz integer = 0     //total size
var new nobj integer = 0     //number of objects sized
var new ftyp string          //F for file, D for directory

////////////////////////////////////////////////////////////////////////////////
//
//   Subroutine DIRSIZE dir
//
//   Add the size of the directory DIR and the files in its tree to the global
//   variable SIZE.
//
subroutine dirsize
  loop dir [arg 1] file dir
    pick one by [dent type]  //what type of file system object is this ?
      option "FILE"
        set size [+ size [dent len]]
      option "DIR"
        call dirsize:+1 [dent tnam] //get size of subdirectory recursively
      endpick
    endloop
  endsub

////////////////////////////////////////////////////////////////////////////////
//
//   Start of main routine.
//
loop dir "." file dir
  pick one by [dent type]    //what type of file system object is this ?
    option "FILE"
      set ftyp "F"
      set size [dent len]
    option "DIR"
      set ftyp "D"
      set size 0             //init accumulated size of tree
      call dirsize [dent tnam]
    endpick
  set nobj [+ nobj 1]        //count one more object in the directory
  set tsiz [+ tsiz size]     //accumulate total size
  show [int size "fw 10"] " " ftyp " " [dent]
  endloop

show
show nobj " objects found, total size " tsiz
